services:
  ros2_camera_lidar_fusion:
    container_name: ros2_camera_lidar_fusion
    build:
      context: .                # repo root
      dockerfile: docker/Dockerfile
    image: ros2_camera_lidar_fusion:latest
    stdin_open: true
    tty: true
    env_file: ./docker/docker-compose.env
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=/tmp/.docker.xauth
    volumes:
      - $XAUTHORITY:/tmp/.docker.xauth
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - .:/ros2_ws/src/ros2_camera_lidar_fusion
      - ../data:/data
            # Fast DDS XML
      - ./docker/rmw:/rmw:ro
    working_dir: /ros2_ws
    network_mode: host
    ipc: host
    pid: host

  rviz2:
    container_name: rviz2
    build:
      context: .                # repo root
      dockerfile: docker/Dockerfile
    image: ros2_camera_lidar_fusion:latest
    stdin_open: true
    tty: true
    env_file: ./docker/docker-compose.env
    # GPU
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-graphics,utility,compute}
      # X11
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
      - QT_X11_NO_MITSHM=1
    volumes:
      - ./docker/rmw:/rmw:ro # Fast DDS XML
      - $XAUTHORITY:/tmp/.docker.xauth
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${HOME}/.Xauthority:/root/.Xauthority:ro
      - .:/ros2_ws/src/ros2_camera_lidar_fusion
      # data + configs
      - ../data:/data
    working_dir: /ros2_ws
    network_mode: host
    ipc: host
    pid: host
    command: >
      bash -lc "source /opt/ros/humble/setup.bash &&
                rviz2 -d /ros2_ws/src/ros2_camera_lidar_fusion/rviz_cfg/rviz_cfg.rviz"
